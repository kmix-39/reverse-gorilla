{"version":3,"sources":["webpack:///./src/components/parts/page-heading/index.js","webpack:///./src/templates/single/hook/index.js"],"names":["PageHeading","props","icon","children","className","HookSingleTemplate","location","data","mdx","body","tableOfContents","frontmatter","useState","isOpenMenu","setIsOpenMenu","isOpenSearch","setIsOpenSearch","isOpenTOC","setIsOpenTOC","activeTOC","useRef","pageTitle","title","pageValues","description","pathname","tocItems","items","breadcrumbItems","label","url","faHome","faAnchor","hookType","faRunning","faFilter","Provider","value","pageQuery"],"mappings":"4FAAA,sCAceA,IAVK,SAAAC,GAAU,IACrBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACd,OACC,kBAAIC,UAAU,qCACb,YAAC,IAAD,CAAQF,KAAMA,EAAME,UAAU,SAC7BD,K,kCCTJ,qJA8EeE,UA3DY,SAAAJ,GAAU,IAC5BK,EAAmBL,EAAnBK,SAD2B,EACRL,EAATM,KAEkCC,IAA5CC,EAH2B,EAG3BA,KAAMC,EAHqB,EAGrBA,gBAAiBC,EAHI,EAGJA,YAHI,EAKCC,oBAAS,GAAtCC,EAL4B,KAKhBC,EALgB,OAMKF,oBAAS,GAA1CG,EAN4B,KAMdC,EANc,OAODJ,oBAAS,GAApCK,EAP4B,KAOjBC,EAPiB,KAQ7BC,EAAYC,iBAAO,MAEnBC,EAAYV,EAAYW,MAGxBC,EAAa,CAClBD,MAAOD,EACPG,YAJuBb,EAAYa,YAKnClB,SAAUA,EAASmB,SACnBC,SAAUhB,EAAgBiB,MAC1BC,gBAAiB,CAChB,CAAEC,MAAO,MAAOC,IAAK,IAAK5B,KAAM6B,KAChC,CAAEF,MAAO,QAASC,IAAK,UAAW5B,KAAM8B,KACxC,CACCH,MAAOlB,EAAYW,MACnBQ,IAAKxB,EAASmB,SACdvB,KAA+B,WAAzBS,EAAYsB,SAAwBC,IAAYC,MAGxDtB,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,GAGZ,OACC,YAAC,IAAWiB,SAAZ,CAAqBC,MAAOd,GAC3B,YAAC,IAAD,MACA,YAAC,IAAD,KACC,YAAC,IAAD,CACCrB,KAA+B,WAAzBS,EAAYsB,SAAwBC,IAAYC,KAErDd,GAEF,mBAAKjB,UAAU,QACd,YAAC,IAAD,KAAiBK,IAElB,6BAaG,IAAM6B,EAAS","file":"component---src-templates-single-hook-index-js-ff05600fdc398416f153.js","sourcesContent":["import React from 'react'\n\nimport FAIcon from '@src-components/block/fa-icon'\n\nconst PageHeading = props => {\n\tconst { icon, children } = props\n\treturn (\n\t\t<h2 className=\"text-4xl font-bold leading-8 mb-4\">\n\t\t\t<FAIcon icon={icon} className=\"mr-1\" />\n\t\t\t{children}\n\t\t</h2>\n\t)\n}\n\nexport default PageHeading\n","import React, { useState, useRef } from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport AppContext from '@src-contexts/app-context'\nimport SEO from '@src-components/common/seo'\n\nimport Layout from '@src-components/layout'\n\nimport ArticleContent from '@src-components/parts/article-content'\nimport PageHeading from '@src-components/parts/page-heading'\n\nimport {\n\tfaHome,\n\tfaAnchor,\n\tfaRunning,\n\tfaFilter,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst HookSingleTemplate = props => {\n\tconst { location, data } = props\n\n\tconst { body, tableOfContents, frontmatter } = data.mdx\n\n\tconst [isOpenMenu, setIsOpenMenu] = useState(false)\n\tconst [isOpenSearch, setIsOpenSearch] = useState(false)\n\tconst [isOpenTOC, setIsOpenTOC] = useState(false)\n\tconst activeTOC = useRef(null)\n\n\tconst pageTitle = frontmatter.title\n\tconst pageDescription = frontmatter.description\n\n\tconst pageValues = {\n\t\ttitle: pageTitle,\n\t\tdescription: pageDescription,\n\t\tlocation: location.pathname,\n\t\ttocItems: tableOfContents.items,\n\t\tbreadcrumbItems: [\n\t\t\t{ label: 'ホーム', url: '/', icon: faHome },\n\t\t\t{ label: 'フック一覧', url: '/hooks/', icon: faAnchor },\n\t\t\t{\n\t\t\t\tlabel: frontmatter.title,\n\t\t\t\turl: location.pathname,\n\t\t\t\ticon: frontmatter.hookType === 'action' ? faRunning : faFilter,\n\t\t\t},\n\t\t],\n\t\tisOpenMenu: isOpenMenu,\n\t\tsetIsOpenMenu: setIsOpenMenu,\n\t\tisOpenSearch: isOpenSearch,\n\t\tsetIsOpenSearch: setIsOpenSearch,\n\t\tisOpenTOC: isOpenTOC,\n\t\tsetIsOpenTOC: setIsOpenTOC,\n\t\tactiveTOC: activeTOC,\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={pageValues}>\n\t\t\t<SEO />\n\t\t\t<Layout>\n\t\t\t\t<PageHeading\n\t\t\t\t\ticon={frontmatter.hookType === 'action' ? faRunning : faFilter}\n\t\t\t\t>\n\t\t\t\t\t{pageTitle}\n\t\t\t\t</PageHeading>\n\t\t\t\t<div className=\"mt-8\">\n\t\t\t\t\t<ArticleContent>{body}</ArticleContent>\n\t\t\t\t</div>\n\t\t\t\t<aside></aside>\n\t\t\t</Layout>\n\t\t</AppContext.Provider>\n\t)\n}\n\nHookSingleTemplate.propTypes = {\n\tdata: PropTypes.object,\n\tpageContext: PropTypes.object,\n}\n\nexport default HookSingleTemplate\n\nexport const pageQuery = graphql`\n\tquery($id: String!) {\n\t\tmdx(id: { eq: $id }) {\n\t\t\tid\n\t\t\tbody\n\t\t\ttableOfContents\n\t\t\tfrontmatter {\n\t\t\t\thookType\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\torder\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}