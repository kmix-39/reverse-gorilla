{"version":3,"sources":["webpack:///./src/templates/single/post/index.js"],"names":["PostSingleTemplate","props","location","data","pageContext","mdx","body","tableOfContents","frontmatter","prevPostId","nextPostId","relatedPosts","relatedHooks","useState","isOpenMenu","setIsOpenMenu","isOpenSearch","setIsOpenSearch","isOpenTOC","setIsOpenTOC","activeTOC","useRef","isDarkMode","setIsDarkMode","pageTitle","title","pageValues","description","pathname","tocItems","items","breadcrumbItems","label","url","icon","faHome","faListAlt","faNewspaper","Provider","value","item","modifiedTime","publishTime","categories","tags","className","prevId","nextId"],"mappings":"4FAAA,+FA0FeA,UApEY,SAAAC,GAAU,IAC5BC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YADW,EAGYD,EAAKE,IAA5CC,EAH2B,EAG3BA,KAAMC,EAHqB,EAGrBA,gBAAiBC,EAHI,EAGJA,YACvBC,EAAuDL,EAAvDK,WAAYC,EAA2CN,EAA3CM,WAAYC,EAA+BP,EAA/BO,aAAcC,EAAiBR,EAAjBQ,aAJX,EAMCC,oBAAS,GAAtCC,EAN4B,KAMhBC,EANgB,OAOKF,oBAAS,GAA1CG,EAP4B,KAOdC,EAPc,OAQDJ,oBAAS,GAApCK,EAR4B,KAQjBC,EARiB,KAS7BC,EAAYC,iBAAO,MATU,EAUCR,mBAAS,MAAtCS,EAV4B,KAUhBC,EAVgB,KAY7BC,EAAYhB,EAAYiB,MAGxBC,EAAa,CAClBD,MAAOD,EACPG,YAJuBnB,EAAYmB,YAKnCzB,SAAUA,EAAS0B,SACnBC,SAAUtB,EAAgBuB,MAC1BC,gBAAiB,CAChB,CAAEC,MAAO,MAAOC,IAAK,IAAKC,KAAMC,KAChC,CAAEH,MAAO,KAAMC,IAAK,UAAWC,KAAME,KACrC,CAAEJ,MAAOxB,EAAYiB,MAAOQ,IAAK/B,EAAS0B,SAAUM,KAAMG,MAE3DvB,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,EACXE,WAAYA,EACZC,cAAeA,GAGhB,OACC,YAAC,IAAWe,SAAZ,CAAqBC,MAAOb,GAC3B,YAAC,IAAD,MACA,YAAC,IAAD,KACC,YAAC,IAAD,KAAcF,GAEd,YAAC,IAAD,KACC,YAAC,IAAD,CAAsBgB,KAAMhC,EAAYiC,eACxC,YAAC,IAAD,CAAqBD,KAAMhC,EAAYkC,cACvC,YAAC,IAAD,CAAoBZ,MAAOtB,EAAYmC,aACvC,YAAC,IAAD,CAAcb,MAAOtB,EAAYoC,QAGlC,YAAC,IAAD,KAAiBtC,GACjB,qBAAOuC,UAAU,SAEhB,YAAC,IAAD,CAAUC,OAAQrC,EAAYsC,OAAQrC,IAEtC,YAAC,IAAD,CAAcoB,MAAOnB,IAErB,YAAC,IAAD,CAAcmB,MAAOlB","file":"component---src-templates-single-post-index-js-27f590310a74cb1f978a.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport { faHome, faListAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faNewspaper } from '@fortawesome/free-regular-svg-icons'\n\nimport { AppContext } from '@src-components/contexts'\nimport { SEO, Layout } from '@src-components/foundations'\nimport {\n\tArticleContent,\n\tMetaItems,\n\tMetaItemCategories,\n\tMetaItemTags,\n\tMetaItemPublishTime,\n\tMetaItemModifiedTime,\n\tPageHeading,\n\tPrevNext,\n\tRelatedPosts,\n\tRelatedHooks,\n} from '@src-components/parts'\n\nconst PostSingleTemplate = props => {\n\tconst { location, data, pageContext } = props\n\n\tconst { body, tableOfContents, frontmatter } = data.mdx\n\tconst { prevPostId, nextPostId, relatedPosts, relatedHooks } = pageContext\n\n\tconst [isOpenMenu, setIsOpenMenu] = useState(false)\n\tconst [isOpenSearch, setIsOpenSearch] = useState(false)\n\tconst [isOpenTOC, setIsOpenTOC] = useState(false)\n\tconst activeTOC = useRef(null)\n\tconst [isDarkMode, setIsDarkMode] = useState(null)\n\n\tconst pageTitle = frontmatter.title\n\tconst pageDescription = frontmatter.description\n\n\tconst pageValues = {\n\t\ttitle: pageTitle,\n\t\tdescription: pageDescription,\n\t\tlocation: location.pathname,\n\t\ttocItems: tableOfContents.items,\n\t\tbreadcrumbItems: [\n\t\t\t{ label: 'ホーム', url: '/', icon: faHome },\n\t\t\t{ label: '記事', url: '/posts/', icon: faListAlt },\n\t\t\t{ label: frontmatter.title, url: location.pathname, icon: faNewspaper },\n\t\t],\n\t\tisOpenMenu: isOpenMenu,\n\t\tsetIsOpenMenu: setIsOpenMenu,\n\t\tisOpenSearch: isOpenSearch,\n\t\tsetIsOpenSearch: setIsOpenSearch,\n\t\tisOpenTOC: isOpenTOC,\n\t\tsetIsOpenTOC: setIsOpenTOC,\n\t\tactiveTOC: activeTOC,\n\t\tisDarkMode: isDarkMode,\n\t\tsetIsDarkMode: setIsDarkMode,\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={pageValues}>\n\t\t\t<SEO />\n\t\t\t<Layout>\n\t\t\t\t<PageHeading>{pageTitle}</PageHeading>\n\t\t\t\t{/* メタ項目 */}\n\t\t\t\t<MetaItems>\n\t\t\t\t\t<MetaItemModifiedTime item={frontmatter.modifiedTime} />\n\t\t\t\t\t<MetaItemPublishTime item={frontmatter.publishTime} />\n\t\t\t\t\t<MetaItemCategories items={frontmatter.categories} />\n\t\t\t\t\t<MetaItemTags items={frontmatter.tags} />\n\t\t\t\t</MetaItems>\n\t\t\t\t{/* 記事コンテンツ */}\n\t\t\t\t<ArticleContent>{body}</ArticleContent>\n\t\t\t\t<aside className=\"mt-12\">\n\t\t\t\t\t{/* 前後ナビ */}\n\t\t\t\t\t<PrevNext prevId={prevPostId} nextId={nextPostId} />\n\t\t\t\t\t{/* 関連コンテンツ */}\n\t\t\t\t\t<RelatedPosts items={relatedPosts} />\n\t\t\t\t\t{/* 関連フック */}\n\t\t\t\t\t<RelatedHooks items={relatedHooks} />\n\t\t\t\t</aside>\n\t\t\t</Layout>\n\t\t</AppContext.Provider>\n\t)\n}\n\nPostSingleTemplate.propTypes = {\n\tdata: PropTypes.object,\n\tpageContext: PropTypes.object,\n}\n\nexport default PostSingleTemplate\n\nexport const pageQuery = graphql`\n\tquery($id: String!) {\n\t\tmdx(id: { eq: $id }) {\n\t\t\tid\n\t\t\tbody\n\t\t\ttableOfContents\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tthumbnail\n\t\t\t\tcategories\n\t\t\t\ttags\n\t\t\t\tpublishTime\n\t\t\t\tmodifiedTime\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t\tname\n\t\t\t\ttype\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}