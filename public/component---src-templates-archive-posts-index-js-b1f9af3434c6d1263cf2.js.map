{"version":3,"sources":["webpack:///./src/templates/archive/posts/index.js"],"names":["PostsArchiveTemplate","props","location","data","pageContext","currentPage","canonical","totalPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","useState","isOpenMenu","setIsOpenMenu","isOpenSearch","setIsOpenSearch","isDarkMode","setIsDarkMode","pageValues","title","description","pathname","breadcrumbItems","label","url","icon","faHome","faListAlt","Provider","value","pattern","className","allMdx","edges","map","edge","key","node","id","item","current","max","parentPath","prevPath","nextPath","hasPrev","hasNext"],"mappings":"2FAAA,mFAiFeA,UAlEc,SAAAC,GAAU,IAC9BC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YAEvBC,EAOGD,EAPHC,YACAC,EAMGF,EANHE,UACAC,EAKGH,EALHG,UACAC,EAIGJ,EAJHI,YACAC,EAGGL,EAHHK,YACAC,EAEGN,EAFHM,aACAC,EACGP,EADHO,aAToC,EAYDC,oBAAS,GAAtCC,EAZ8B,KAYlBC,EAZkB,OAaGF,oBAAS,GAA1CG,EAb8B,KAahBC,EAbgB,OAcDJ,mBAAS,MAAtCK,EAd8B,KAclBC,EAdkB,KAmB/BC,EAAa,CAClBC,MAJiB,KAKjBC,YAJuB,GAKvBnB,SAAUA,EAASoB,SACnBhB,UAAWA,EACXiB,gBAAiB,CAChB,CAAEC,MAAO,MAAOC,IAAK,IAAKC,KAAMC,KAChC,CAAEH,MAVc,KAUIC,IAAKvB,EAASoB,SAAUI,KAAME,MAEnDf,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBC,WAAYA,EACZC,cAAeA,GAGhB,OACC,YAAC,IAAWW,SAAZ,CAAqBC,MAAOX,GAC3B,YAAC,IAAD,MACA,YAAC,IAAD,CAAQY,QAAQ,cACf,YAAC,IAAD,CAAaL,KAAME,KAxBJ,MAyBf,uBAASI,UAAU,QAClB,YAAC,IAAD,KACE7B,EAAK8B,OAAOC,MAAMC,KAAI,SAAAC,GACtB,OAAO,YAAC,IAAD,CAAiBC,IAAKD,EAAKE,KAAKC,GAAIC,KAAMJ,QAGnD,YAAC,IAAD,CACCK,QAASpC,EACTqC,IAAKnC,EACLoC,WAAU,UACVC,SAAUlC,EACVmC,SAAUlC,EACVmC,QAASrC,EACTsC,QAASvC","file":"component---src-templates-archive-posts-index-js-b1f9af3434c6d1263cf2.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport { faHome, faListAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport { AppContext } from '@src-components/contexts'\nimport { SEO, Layout } from '@src-components/foundations'\nimport {\n\tArticleList,\n\tArticleListItem,\n\tPageHeading,\n\tPager,\n} from '@src-components/parts'\n\nconst PostsArchiveTemplate = props => {\n\tconst { location, data, pageContext } = props\n\tconst {\n\t\tcurrentPage,\n\t\tcanonical,\n\t\ttotalPage,\n\t\thasNextPage,\n\t\thasPrevPage,\n\t\tprevPagePath,\n\t\tnextPagePath,\n\t} = pageContext\n\n\tconst [isOpenMenu, setIsOpenMenu] = useState(false)\n\tconst [isOpenSearch, setIsOpenSearch] = useState(false)\n\tconst [isDarkMode, setIsDarkMode] = useState(null)\n\n\tconst pageTitle = '記事'\n\tconst pageDescription = ''\n\n\tconst pageValues = {\n\t\ttitle: pageTitle,\n\t\tdescription: pageDescription,\n\t\tlocation: location.pathname,\n\t\tcanonical: canonical,\n\t\tbreadcrumbItems: [\n\t\t\t{ label: 'ホーム', url: '/', icon: faHome },\n\t\t\t{ label: pageTitle, url: location.pathname, icon: faListAlt },\n\t\t],\n\t\tisOpenMenu: isOpenMenu,\n\t\tsetIsOpenMenu: setIsOpenMenu,\n\t\tisOpenSearch: isOpenSearch,\n\t\tsetIsOpenSearch: setIsOpenSearch,\n\t\tisDarkMode: isDarkMode,\n\t\tsetIsDarkMode: setIsDarkMode,\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={pageValues}>\n\t\t\t<SEO />\n\t\t\t<Layout pattern=\"one-column\">\n\t\t\t\t<PageHeading icon={faListAlt}>{pageTitle}</PageHeading>\n\t\t\t\t<section className=\"mt-8\">\n\t\t\t\t\t<ArticleList>\n\t\t\t\t\t\t{data.allMdx.edges.map(edge => {\n\t\t\t\t\t\t\treturn <ArticleListItem key={edge.node.id} item={edge} />\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ArticleList>\n\t\t\t\t\t<Pager\n\t\t\t\t\t\tcurrent={currentPage}\n\t\t\t\t\t\tmax={totalPage}\n\t\t\t\t\t\tparentPath={`/posts/`}\n\t\t\t\t\t\tprevPath={prevPagePath}\n\t\t\t\t\t\tnextPath={nextPagePath}\n\t\t\t\t\t\thasPrev={hasPrevPage}\n\t\t\t\t\t\thasNext={hasNextPage}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</Layout>\n\t\t</AppContext.Provider>\n\t)\n}\n\nPostsArchiveTemplate.propTypes = {\n\tpageContext: PropTypes.object,\n}\n\nexport default PostsArchiveTemplate\n\nexport const pageQuery = graphql`\n\tquery($limit: Int!, $offset: Int!) {\n\t\tallMdx(\n\t\t\tlimit: $limit\n\t\t\tskip: $offset\n\t\t\tsort: { fields: [frontmatter___modifiedTime], order: DESC }\n\t\t\tfilter: {\n\t\t\t\tfrontmatter: { draft: { ne: true } }\n\t\t\t\tfields: { type: { eq: \"post\" } }\n\t\t\t}\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tthumbnail\n\t\t\t\t\t\tcategories\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tpublishTime\n\t\t\t\t\t\tmodifiedTime\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tname\n\t\t\t\t\t\ttype\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}